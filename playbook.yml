---
- name: Setup ansible user
  hosts: wordpress_servers
  become: true
  tasks:
    - name: Create ansible user
      ansible.builtin.user:
        name: ansible
        shell: /bin/bash
        groups: sudo
        append: true
        create_home: true
        state: present

    - name: Set up sudo for ansible user
      ansible.builtin.copy:
        content: "ansible ALL=(ALL) NOPASSWD:ALL"
        dest: /etc/sudoers.d/ansible
        mode: "0o440"
        validate: /usr/sbin/visudo -cf %s

    # - name: Add authorized key
    #   ansible.builtin.authorized_key:
    #     user: ansible
    #     state: present
    #     key: "{{ lookup('file', '~/.ssh/id_rsa.pub') }}"

- name: Deploy WordPress with Docker
  hosts: wordpress_servers
  become: true
  vars_files:
    - vars/main.yml

  tasks:
    - name: Install required packages
      ansible.builtin.apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg
          - lsb-release
          - software-properties-common
          - docker.io
          - docker-compose
        state: present
        update_cache: true

    - name: Create docker group
      ansible.builtin.group:
        name: docker
        state: present

    - name: Create project user
      ansible.builtin.user:
        name: "{{ project_user }}"
        group: "{{ project_group }}"
        home: "{{ project_home }}"
        shell: /bin/bash
        create_home: true
        state: present

    - name: Add user to docker group
      ansible.builtin.user:
        name: "{{ project_user }}"
        groups: docker
        append: true

    - name: Wait for group changes to take effect
      ansible.builtin.meta: flush_handlers

    - name: Create project directory
      ansible.builtin.file:
        path: "{{ project_dir }}"
        state: directory
        mode: "0o755"
        owner: "{{ project_user }}"
        group: "{{ project_group }}"

    - name: Copy prometheus config
      ansible.builtin.copy:
        src: prometheus.yml
        dest: "{{ project_dir }}/prometheus.yml"
        owner: "{{ project_user }}"
        group: "{{ project_group }}"
        mode: "0o644"

    - name: Шаблонизировать docker-compose.yml
      ansible.builtin.template:
        src: docker-compose.yml.j2
        dest: "{{ project_dir }}/docker-compose.yml"
        mode: "0o644"

    - name: Copy MySQL configuration
      ansible.builtin.copy:
        src: mysql.cnf
        dest: "{{ project_dir }}/mysql.cnf"
        owner: "{{ project_user }}"
        group: "{{ project_group }}"
        mode: "0o644"

    - name: Copy environment file
      ansible.builtin.copy:
        src: .env
        dest: "{{ project_dir }}/.env"
        owner: "{{ project_user }}"
        group: "{{ project_group }}"
        mode: "0o600"

    - name: Управление основным Docker Compose стеком
      community.docker.docker_compose_v2:
        project_src: "{{ project_dir }}"
        files:
          - docker-compose.yml
        state: present
        remove_orphans: true

    - name: Шаблонизировать docker-compose-monitoring.yml
      ansible.builtin.template:
        src: docker-compose-monitoring.yml.j2
        dest: "{{ project_dir }}/docker-compose-monitoring.yml"
        mode: "0o644"

    - name: Шаблонизировать prometheus.yml
      ansible.builtin.template:
        src: prometheus.yml.j2
        dest: "{{ project_dir }}/prometheus.yml"
        mode: "0o644"

    - name: Управление стеком мониторинга
      community.docker.docker_compose_v2:
        project_src: "{{ project_dir }}"
        files:
          - docker-compose-monitoring.yml
        state: present
        remove_orphans: true
 